---
// Test page for card fan adjustments - not included in production builds
// Access at: /test-card-fan
import BaseLayout from '@/layouts/BaseLayout.astro';
import { Card } from '@/components/Card';

// Sample cards for testing
const cards = [
  {
    id: '1',
    name: 'Stormbreath Dragon',
    mana_cost: '{3}{R}{R}',
    type_line: 'Creature — Dragon',
    oracle_text: 'Flying, haste, protection from white',
    colors: ['R'],
    color_identity: ['R'],
    set: 'DTK',
    collector_number: '143',
    rarity: 'mythic',
    cmc: 5,
    power: '4',
    toughness: '4',
    image_uris: {
      small: 'https://cards.scryfall.io/small/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
      normal: 'https://cards.scryfall.io/normal/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
      large: 'https://cards.scryfall.io/large/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
    }
  },
  {
    id: '2',
    name: 'Den Protector',
    mana_cost: '{1}{G}',
    type_line: 'Creature — Human Warrior',
    oracle_text: 'Megamorph {1}{G}',
    colors: ['G'],
    color_identity: ['G'],
    set: 'DTK',
    collector_number: '181',
    rarity: 'rare',
    cmc: 2,
    power: '2',
    toughness: '1',
    image_uris: {
      small: 'https://cards.scryfall.io/small/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
      normal: 'https://cards.scryfall.io/normal/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
      large: 'https://cards.scryfall.io/large/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
    }
  },
  {
    id: '3',
    name: 'Silumgar\'s Scorn',
    mana_cost: '{U}{U}',
    type_line: 'Instant',
    oracle_text: 'As an additional cost to cast this spell, you may reveal a Dragon card from your hand.',
    colors: ['U'],
    color_identity: ['U'],
    set: 'DTK',
    collector_number: '78',
    rarity: 'uncommon',
    cmc: 2,
    image_uris: {
      small: 'https://cards.scryfall.io/small/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
      normal: 'https://cards.scryfall.io/normal/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
      large: 'https://cards.scryfall.io/large/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
    }
  },
];

// Test page styles
const styles = `
  body {
    background: linear-gradient(to bottom right, #0f172a, #1e293b, #0f172a);
  }
  
  .control-panel {
    background: rgba(30, 41, 59, 0.5);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(71, 85, 105, 0.5);
  }
  
  .card-container {
    position: relative;
    display: inline-block;
  }
  
  .fanned-card {
    position: absolute;
    transition: all 0.3s ease;
    cursor: pointer;
  }
  
  .fanned-card:hover {
    z-index: 10;
    transform: translateY(-10px) !important;
  }
  
  .center-card {
    position: relative;
    z-index: 5;
  }
`;
---

<BaseLayout title="Card Fan Test">
  <style set:html>{styles}</style>
  
  <div class="min-h-screen p-8">
    <div class="max-w-7xl mx-auto">
      <h1 class="text-3xl font-bold text-white mb-8">Card Fan Layout Test</h1>
      
      <!-- Controls -->
      <div class="control-panel rounded-2xl p-6 mb-8">
        <h2 class="text-xl font-semibold text-white mb-4">Adjust Fan Parameters</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Radius: <span id="radius-value">70</span>px
            </label>
            <input 
              type="range" 
              id="radius-slider" 
              min="30" 
              max="150" 
              value="70"
              class="w-full"
            />
          </div>
          
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Horizontal Offset: <span id="h-offset-value">-50</span>px
            </label>
            <input 
              type="range" 
              id="h-offset-slider" 
              min="-100" 
              max="0" 
              value="-50"
              class="w-full"
            />
          </div>
          
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Vertical Position: <span id="v-pos-value">37</span>px
            </label>
            <input 
              type="range" 
              id="v-pos-slider" 
              min="0" 
              max="60" 
              value="37"
              class="w-full"
            />
          </div>
          
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Rotation Range: <span id="rotation-value">30</span>°
            </label>
            <input 
              type="range" 
              id="rotation-slider" 
              min="10" 
              max="60" 
              value="30"
              class="w-full"
            />
          </div>
          
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Card Size
            </label>
            <select id="card-size" class="bg-slate-700 text-white rounded px-3 py-2 w-full">
              <option value="small">Small</option>
              <option value="medium" selected>Medium</option>
              <option value="large">Large</option>
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-slate-300 mb-2">
              Number of Cards
            </label>
            <select id="card-count" class="bg-slate-700 text-white rounded px-3 py-2 w-full">
              <option value="1">1 (Center only)</option>
              <option value="3" selected>3 (Center + 2)</option>
              <option value="5">5 (Center + 4)</option>
            </select>
          </div>
        </div>
        
        <div class="mt-6 p-4 bg-slate-900/50 rounded-lg">
          <p class="text-sm text-slate-400 font-mono" id="current-settings">
            Radius: 70px, H-Offset: -50px, V-Position: 37px, Rotation: 30°
          </p>
        </div>
      </div>
      
      <!-- Card Display Area -->
      <div class="flex justify-center items-center min-h-[500px]">
        <div id="card-display" class="card-container">
          <!-- Cards will be rendered here by JavaScript -->
        </div>
      </div>
      
      <!-- Info -->
      <div class="mt-8 p-4 bg-blue-500/10 rounded-lg border border-blue-500/20">
        <p class="text-sm text-blue-300">
          This is a test page for adjusting card fan layout parameters. 
          Changes here won't affect the production build.
        </p>
      </div>
    </div>
  </div>
  
  <script>
    import { Card } from '@/components/Card';
    import { render } from 'react-dom';
    import React from 'react';
    
    const cards = [
      {
        id: '1',
        name: 'Stormbreath Dragon',
        mana_cost: '{3}{R}{R}',
        type_line: 'Creature — Dragon',
        oracle_text: 'Flying, haste, protection from white',
        colors: ['R'],
        color_identity: ['R'],
        set: 'DTK',
        collector_number: '143',
        rarity: 'mythic',
        cmc: 5,
        power: '4',
        toughness: '4',
        image_uris: {
          small: 'https://cards.scryfall.io/small/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
          normal: 'https://cards.scryfall.io/normal/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
          large: 'https://cards.scryfall.io/large/front/1/1/11309ffa-4e33-4053-9ce6-e1d5d6e97fc9.jpg?1562826320',
        }
      },
      {
        id: '2',
        name: 'Den Protector',
        mana_cost: '{1}{G}',
        type_line: 'Creature — Human Warrior',
        oracle_text: 'Megamorph {1}{G}',
        colors: ['G'],
        color_identity: ['G'],
        set: 'DTK',
        collector_number: '181',
        rarity: 'rare',
        cmc: 2,
        power: '2',
        toughness: '1',
        image_uris: {
          small: 'https://cards.scryfall.io/small/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
          normal: 'https://cards.scryfall.io/normal/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
          large: 'https://cards.scryfall.io/large/front/f/2/f22c03e1-acfd-40b8-97ea-c6ec7535a36f.jpg?1562796260',
        }
      },
      {
        id: '3',
        name: 'Silumgar\'s Scorn',
        mana_cost: '{U}{U}',
        type_line: 'Instant',
        oracle_text: 'As an additional cost to cast this spell, you may reveal a Dragon card from your hand.',
        colors: ['U'],
        color_identity: ['U'],
        set: 'DTK',
        collector_number: '78',
        rarity: 'uncommon',
        cmc: 2,
        image_uris: {
          small: 'https://cards.scryfall.io/small/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
          normal: 'https://cards.scryfall.io/normal/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
          large: 'https://cards.scryfall.io/large/front/0/7/077bee72-62f6-4d90-8557-ff9cac42ec9a.jpg?1562782102',
        }
      },
    ];
    
    function renderCards() {
      const container = document.getElementById('card-display');
      const radius = parseInt(document.getElementById('radius-slider').value);
      const hOffset = parseInt(document.getElementById('h-offset-slider').value);
      const vPos = parseInt(document.getElementById('v-pos-slider').value);
      const rotation = parseInt(document.getElementById('rotation-slider').value);
      const cardSize = document.getElementById('card-size').value;
      const cardCount = parseInt(document.getElementById('card-count').value);
      
      // Clear container
      container.innerHTML = '';
      
      // Calculate positions based on card count
      const positions = [];
      if (cardCount === 1) {
        positions.push({ angle: 0, zIndex: 5 });
      } else if (cardCount === 3) {
        positions.push({ angle: -rotation, zIndex: 1 });
        positions.push({ angle: 0, zIndex: 5 });
        positions.push({ angle: rotation, zIndex: 1 });
      } else if (cardCount === 5) {
        positions.push({ angle: -rotation * 1.5, zIndex: 0 });
        positions.push({ angle: -rotation * 0.5, zIndex: 1 });
        positions.push({ angle: 0, zIndex: 5 });
        positions.push({ angle: rotation * 0.5, zIndex: 1 });
        positions.push({ angle: rotation * 1.5, zIndex: 0 });
      }
      
      // Render cards
      positions.forEach((pos, index) => {
        const cardIndex = index % cards.length;
        const card = cards[cardIndex];
        
        const wrapper = document.createElement('div');
        wrapper.className = pos.angle === 0 ? 'center-card' : 'fanned-card';
        wrapper.style.zIndex = pos.zIndex;
        
        if (pos.angle !== 0) {
          const angleRad = (pos.angle * Math.PI) / 180;
          const x = Math.sin(angleRad) * radius + hOffset;
          const y = vPos;
          wrapper.style.transform = `translate(${x}px, ${y}px) rotate(${pos.angle}deg)`;
        }
        
        container.appendChild(wrapper);
        
        // Render React component
        render(
          React.createElement(Card, {
            card: card,
            size: cardSize,
            responsive: false,
            canInteract: true
          }),
          wrapper
        );
      });
      
      // Update display
      document.getElementById('radius-value').textContent = radius;
      document.getElementById('h-offset-value').textContent = hOffset;
      document.getElementById('v-pos-value').textContent = vPos;
      document.getElementById('rotation-value').textContent = rotation;
      document.getElementById('current-settings').textContent = 
        `Radius: ${radius}px, H-Offset: ${hOffset}px, V-Position: ${vPos}px, Rotation: ${rotation}°`;
    }
    
    // Initial render
    renderCards();
    
    // Add event listeners
    ['radius-slider', 'h-offset-slider', 'v-pos-slider', 'rotation-slider', 'card-size', 'card-count']
      .forEach(id => {
        document.getElementById(id).addEventListener('input', renderCards);
        document.getElementById(id).addEventListener('change', renderCards);
      });
  </script>
</BaseLayout>